# parish split between aces_2022 Lisboa Central and aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Campo de Ourique") ~ "aces_2022 Lisboa Norte / aces_2022 Lisboa Central",
# aces_2022 Lisboa Ocidental/Oeiras
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Ajuda", "Belém", "Alcântara", "Campo de Ourique") ~ "aces_2022 Lisboa Ocidental/Oeiras",
municipio_2013 == "Oeiras" ~ "aces_2022 Lisboa Ocidental/Oeiras",
# aces_2022 Porto Ocidental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Ramalde", "União das freguesias de Aldoar, Foz do Douro e Nevogilde", "União das freguesias de Cedofeita, Santo Ildefonso, Sé, Miragaia, São Nicolau e Vitória", "União das freguesias de Lordelo do Ouro e Massarelos") ~ "aces_2022 Porto Ocidental",
# aces_2022 Porto Oriental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Bonfim", "Campanhã", "Paranhos") ~ "aces_2022 Porto Oriental",
# aces_2022 Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Avintes", "Canidelo", "Oliveira do Douro", "União das freguesias de Mafamude e Vilar do Paraíso", "União das freguesias de Santa Marinha e São Pedro da Afurada", "Vilar de Andorinho") ~ "aces_2022 Gaia",
# aces_2022 Espinho/Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Arcozelo", "Canelas", "Madalena", "São Félix da Marinha", "União das freguesias de Grijó e Sermonde", "União das freguesias de Gulpilhares e Valadares", "União das freguesias de Pedroso e Seixezelo", "União das freguesias de Sandim, Olival, Lever e Crestuma", "União das freguesias de Serzedo e Perosinho") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Gondomar" & freguesia_2013 %in% c("Lomba") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Espinho" ~ "aces_2022 Espinho/Gaia",
TRUE ~ as.character(aces_2022)),
aces_2022 = str_replace_all(aces_2022,"ACeS", "ACES"))
# saves as .csv
write.csv(geolinkage_aces, file = geolinkage_path, fileEncoding = "UTF-8", row.names = FALSE)
## WARNING: Portuguese NUTS will be altered in 2023 by https://ec.europa.eu/transparency/documents-register/detail?ref=C(2022)9242&lang=pt
}
geolinkage_path <- "datasets/geolinkage_aces_2022.csv"
# gets the column names from the geolinkage file
geolinkage_col <- suppressWarnings(tryCatch(colnames(read.csv(geolinkage_path)), error = function(e) NULL))
# sets the column names to test against
geolinkage_test <- c("freguesia_2013", "dicofre_2013", "municipio_2013", "municipio_2013_cod", "municipio_2002_cod", "distrito_2013", "distrito_2013_cod", "nuts3_2013", "nuts3_2013_cod", "nuts3_2002_cod", "nuts2_2013", "nuts2_2013_cod", "nuts1_2013", "nuts1_2013_cod", "pais", "pais_cod", "aces_2022", "aces_2022_cod", "ars_2022", "ars_2022_cod")
# if the file has the right column names, it's loaded, otherwise a new file is created
if (
identical(geolinkage_col, geolinkage_test)) {
geolinkage_aces <- read.csv(geolinkage_path)
} else {
# loads municipalities linkage file
linkage_municipalities <- read_csv("datasets/linkage_geo.csv", col_types = "c") |>
select(geo, cod_geo_nuts2002, cod_geo, nuts1, nuts2, nuts3, pais, cod_pais, aces2, cod_aces, ars, cod_ars) |>
rename(nuts1_2013 = "nuts1",
nuts2_2013 = "nuts2",
nuts3_2013 = "nuts3",
municipio_2013 = "geo",
municipio_2013_cod = "cod_geo",
municipio_2002_cod = "cod_geo_nuts2002",
ars_2022 = "ars",
ars_2022_cod = "cod_ars",
aces_2022 = "aces2",
aces_2022_cod = "cod_aces",
pais_cod = "cod_pais") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(municipio_2002_cod, 4),
# creates columns with the appropiate INE codes for each NUTS I, II, and III
nuts1_2002_cod = substring(municipio_2002_cod, 1, 1),
nuts1_2013_cod = substring(municipio_2013_cod, 1, 1),
nuts2_2002_cod = substring(municipio_2002_cod, 1, 2),
nuts2_2013_cod = substring(municipio_2013_cod, 1, 2),
nuts3_2002_cod = substring(municipio_2002_cod, 1, 3),
nuts3_2013_cod = substring(municipio_2013_cod, 1, 3)
)
# loads parishes linkage file
## source: https://dados.gov.pt/pt/datasets/freguesias-de-portugal/
linkage_parishes <- import("datasets/freguesias-metadata.xlsx") |>
clean_names() |>
select(distrito, freguesia, dicofre) |>
rename(distrito_2013 = "distrito",
freguesia_2013 = "freguesia",
dicofre_2013 = "dicofre") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(dicofre_2013, 1, 4),
# some INE databases have a distric disaggregation
distrito_2013_cod = case_when(
distrito_2013 == "Aveiro" ~ "01",
distrito_2013 == "Beja" ~ "02",
distrito_2013 == "Braga" ~ "03",
distrito_2013 == "Bragança" ~ "04",
distrito_2013 == "Castelo Branco" ~ "05",
distrito_2013 == "Coimbra" ~ "06",
distrito_2013 == "Évora" ~ "07",
distrito_2013 == "Faro" ~ "08",
distrito_2013 == "Guarda" ~ "09",
distrito_2013 == "Leiria" ~ "10",
distrito_2013 == "Lisboa" ~ "11",
distrito_2013 == "Portalegre" ~ "12",
distrito_2013 == "Porto" ~ "13",
distrito_2013 == "Santarém" ~ "14",
distrito_2013 == "Setúbal" ~ "15",
distrito_2013 == "Viana do Castelo" ~ "16",
distrito_2013 == "Vila Real" ~ "17",
distrito_2013 == "Viseu" ~ "18",
distrito_2013 %in% c("Ilha de Santa Maria", "Ilha de São Miguel", "Ilha Terceira", "Ilha Graciosa", "Ilha de São Jorge", "Ilha do Pico", "Ilha do Faial", "Ilha das Flores", "Ilha do Corvo") ~ "2",
distrito_2013 %in% c("Ilha da Madeira", "Ilha de Porto Santo") ~ "3"
)
)
# links parishes and municipalities and corrects the health cluster boundaries (valid as of 2022-12-31)
geolinkage_aces <- left_join(linkage_parishes, linkage_municipalities, by = "cod_mun4") |>
select(freguesia_2013, dicofre_2013, municipio_2013, municipio_2013_cod, municipio_2002_cod, distrito_2013, distrito_2013_cod, nuts3_2013, nuts3_2013_cod, nuts3_2002_cod, nuts2_2013, nuts2_2013_cod, nuts1_2013, nuts1_2013_cod, pais, pais_cod, aces_2022, aces_2022_cod, ars_2022, ars_2022_cod) |>
# cleans up the health cluster boundaries in Lisbon and Porto Metropolitan Areas
mutate(aces_2022 = case_when(
# aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Areeiro", "Arroios", "Beato", "Estrela", "Marvila", "Misericórdia", "Olivais", "Parque das Nações", "Penha de França", "Santa Maria Maior", "Santo António", "São Vicente") ~ "aces_2022 Lisboa Central",
# aces_2022 Lisboa Norte
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Alvalade", "Avenidas Novas", "Benfica", "Campolide", "Carnide", "Lumiar", "São Domingos de Benfica", "Santa Clara") ~ "aces_2022 Lisboa Norte",
# parish split between aces_2022 Lisboa Central and aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Campo de Ourique") ~ "aces_2022 Lisboa Norte / aces_2022 Lisboa Central",
# aces_2022 Lisboa Ocidental/Oeiras
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Ajuda", "Belém", "Alcântara", "Campo de Ourique") ~ "aces_2022 Lisboa Ocidental/Oeiras",
municipio_2013 == "Oeiras" ~ "aces_2022 Lisboa Ocidental/Oeiras",
# aces_2022 Porto Ocidental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Ramalde", "União das freguesias de Aldoar, Foz do Douro e Nevogilde", "União das freguesias de Cedofeita, Santo Ildefonso, Sé, Miragaia, São Nicolau e Vitória", "União das freguesias de Lordelo do Ouro e Massarelos") ~ "aces_2022 Porto Ocidental",
# aces_2022 Porto Oriental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Bonfim", "Campanhã", "Paranhos") ~ "aces_2022 Porto Oriental",
# aces_2022 Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Avintes", "Canidelo", "Oliveira do Douro", "União das freguesias de Mafamude e Vilar do Paraíso", "União das freguesias de Santa Marinha e São Pedro da Afurada", "Vilar de Andorinho") ~ "aces_2022 Gaia",
# aces_2022 Espinho/Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Arcozelo", "Canelas", "Madalena", "São Félix da Marinha", "União das freguesias de Grijó e Sermonde", "União das freguesias de Gulpilhares e Valadares", "União das freguesias de Pedroso e Seixezelo", "União das freguesias de Sandim, Olival, Lever e Crestuma", "União das freguesias de Serzedo e Perosinho") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Gondomar" & freguesia_2013 %in% c("Lomba") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Espinho" ~ "aces_2022 Espinho/Gaia",
TRUE ~ as.character(aces_2022)),
aces_2022 = str_replace_all(aces_2022,"ACeS", "ACES"))
# saves as .csv
write.csv(geolinkage_aces, file = geolinkage_path, fileEncoding = "UTF-8", row.names = FALSE)
## WARNING: Portuguese NUTS will be altered in 2023 by https://ec.europa.eu/transparency/documents-register/detail?ref=C(2022)9242&lang=pt
}
if (
identical(geolinkage_col, geolinkage_test)) {
geolinkage_aces <- read.csv(geolinkage_path)
} else {
# loads municipalities linkage file
linkage_municipalities <- read_csv("datasets/linkage_geo.csv", col_types = "c") |>
select(geo, cod_geo_nuts2002, cod_geo, nuts1, nuts2, nuts3, pais, cod_pais, aces2, cod_aces, ars, cod_ars) |>
rename(nuts1_2013 = "nuts1",
nuts2_2013 = "nuts2",
nuts3_2013 = "nuts3",
municipio_2013 = "geo",
municipio_2013_cod = "cod_geo",
municipio_2002_cod = "cod_geo_nuts2002",
ars_2022 = "ars",
ars_2022_cod = "cod_ars",
aces_2022 = "aces2",
aces_2022_cod = "cod_aces",
pais_cod = "cod_pais") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(municipio_2002_cod, 4),
# creates columns with the appropiate INE codes for each NUTS I, II, and III
nuts1_2002_cod = substring(municipio_2002_cod, 1, 1),
nuts1_2013_cod = substring(municipio_2013_cod, 1, 1),
nuts2_2002_cod = substring(municipio_2002_cod, 1, 2),
nuts2_2013_cod = substring(municipio_2013_cod, 1, 2),
nuts3_2002_cod = substring(municipio_2002_cod, 1, 3),
nuts3_2013_cod = substring(municipio_2013_cod, 1, 3)
)
# loads parishes linkage file
## source: https://dados.gov.pt/pt/datasets/freguesias-de-portugal/
linkage_parishes <- import("datasets/freguesias-metadata.xlsx") |>
clean_names() |>
select(distrito, freguesia, dicofre) |>
rename(distrito_2013 = "distrito",
freguesia_2013 = "freguesia",
dicofre_2013 = "dicofre") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(dicofre_2013, 1, 4),
# some INE databases have a distric disaggregation
distrito_2013_cod = case_when(
distrito_2013 == "Aveiro" ~ "01",
distrito_2013 == "Beja" ~ "02",
distrito_2013 == "Braga" ~ "03",
distrito_2013 == "Bragança" ~ "04",
distrito_2013 == "Castelo Branco" ~ "05",
distrito_2013 == "Coimbra" ~ "06",
distrito_2013 == "Évora" ~ "07",
distrito_2013 == "Faro" ~ "08",
distrito_2013 == "Guarda" ~ "09",
distrito_2013 == "Leiria" ~ "10",
distrito_2013 == "Lisboa" ~ "11",
distrito_2013 == "Portalegre" ~ "12",
distrito_2013 == "Porto" ~ "13",
distrito_2013 == "Santarém" ~ "14",
distrito_2013 == "Setúbal" ~ "15",
distrito_2013 == "Viana do Castelo" ~ "16",
distrito_2013 == "Vila Real" ~ "17",
distrito_2013 == "Viseu" ~ "18",
distrito_2013 %in% c("Ilha de Santa Maria", "Ilha de São Miguel", "Ilha Terceira", "Ilha Graciosa", "Ilha de São Jorge", "Ilha do Pico", "Ilha do Faial", "Ilha das Flores", "Ilha do Corvo") ~ "2",
distrito_2013 %in% c("Ilha da Madeira", "Ilha de Porto Santo") ~ "3"
)
)
# links parishes and municipalities and corrects the health cluster boundaries (valid as of 2022-12-31)
geolinkage_aces <- left_join(linkage_parishes, linkage_municipalities, by = "cod_mun4") |>
select(freguesia_2013, dicofre_2013, municipio_2013, municipio_2013_cod, municipio_2002_cod, distrito_2013, distrito_2013_cod, nuts3_2013, nuts3_2013_cod, nuts3_2002_cod, nuts2_2013, nuts2_2013_cod, nuts1_2013, nuts1_2013_cod, pais, pais_cod, aces_2022, aces_2022_cod, ars_2022, ars_2022_cod) |>
# cleans up the health cluster boundaries in Lisbon and Porto Metropolitan Areas
mutate(aces_2022 = case_when(
# aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Areeiro", "Arroios", "Beato", "Estrela", "Marvila", "Misericórdia", "Olivais", "Parque das Nações", "Penha de França", "Santa Maria Maior", "Santo António", "São Vicente") ~ "aces_2022 Lisboa Central",
# aces_2022 Lisboa Norte
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Alvalade", "Avenidas Novas", "Benfica", "Campolide", "Carnide", "Lumiar", "São Domingos de Benfica", "Santa Clara") ~ "aces_2022 Lisboa Norte",
# parish split between aces_2022 Lisboa Central and aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Campo de Ourique") ~ "aces_2022 Lisboa Norte / aces_2022 Lisboa Central",
# aces_2022 Lisboa Ocidental/Oeiras
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Ajuda", "Belém", "Alcântara", "Campo de Ourique") ~ "aces_2022 Lisboa Ocidental/Oeiras",
municipio_2013 == "Oeiras" ~ "aces_2022 Lisboa Ocidental/Oeiras",
# aces_2022 Porto Ocidental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Ramalde", "União das freguesias de Aldoar, Foz do Douro e Nevogilde", "União das freguesias de Cedofeita, Santo Ildefonso, Sé, Miragaia, São Nicolau e Vitória", "União das freguesias de Lordelo do Ouro e Massarelos") ~ "aces_2022 Porto Ocidental",
# aces_2022 Porto Oriental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Bonfim", "Campanhã", "Paranhos") ~ "aces_2022 Porto Oriental",
# aces_2022 Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Avintes", "Canidelo", "Oliveira do Douro", "União das freguesias de Mafamude e Vilar do Paraíso", "União das freguesias de Santa Marinha e São Pedro da Afurada", "Vilar de Andorinho") ~ "aces_2022 Gaia",
# aces_2022 Espinho/Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Arcozelo", "Canelas", "Madalena", "São Félix da Marinha", "União das freguesias de Grijó e Sermonde", "União das freguesias de Gulpilhares e Valadares", "União das freguesias de Pedroso e Seixezelo", "União das freguesias de Sandim, Olival, Lever e Crestuma", "União das freguesias de Serzedo e Perosinho") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Gondomar" & freguesia_2013 %in% c("Lomba") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Espinho" ~ "aces_2022 Espinho/Gaia",
TRUE ~ as.character(aces_2022)),
aces_2022 = str_replace_all(aces_2022,"ACeS", "ACES"))
# saves as .csv
write.csv(geolinkage_aces, file = geolinkage_path, fileEncoding = "UTF-8", row.names = FALSE)
## WARNING: Portuguese NUTS will be altered in 2023 by https://ec.europa.eu/transparency/documents-register/detail?ref=C(2022)9242&lang=pt
}
linkage_municipalities <- read_csv("datasets/linkage_geo.csv", col_types = "c") |>
select(geo, cod_geo_nuts2002, cod_geo, nuts1, nuts2, nuts3, pais, cod_pais, aces2, cod_aces, ars, cod_ars) |>
rename(nuts1_2013 = "nuts1",
nuts2_2013 = "nuts2",
nuts3_2013 = "nuts3",
municipio_2013 = "geo",
municipio_2013_cod = "cod_geo",
municipio_2002_cod = "cod_geo_nuts2002",
ars_2022 = "ars",
ars_2022_cod = "cod_ars",
aces_2022 = "aces2",
aces_2022_cod = "cod_aces",
pais_cod = "cod_pais") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(municipio_2002_cod, 4),
# creates columns with the appropiate INE codes for each NUTS I, II, and III
nuts1_2002_cod = substring(municipio_2002_cod, 1, 1),
nuts1_2013_cod = substring(municipio_2013_cod, 1, 1),
nuts2_2002_cod = substring(municipio_2002_cod, 1, 2),
nuts2_2013_cod = substring(municipio_2013_cod, 1, 2),
nuts3_2002_cod = substring(municipio_2002_cod, 1, 3),
nuts3_2013_cod = substring(municipio_2013_cod, 1, 3)
)
geolinkage_path <- "datasets/geolinkage_aces_2022.csv"
# gets the column names from the geolinkage file
geolinkage_col <- suppressWarnings(tryCatch(colnames(read.csv(geolinkage_path)), error = function(e) NULL))
# sets the column names to test against
geolinkage_test <- c("freguesia_2013", "dicofre_2013", "municipio_2013", "municipio_2013_cod", "municipio_2002_cod", "distrito_2013", "distrito_2013_cod", "nuts3_2013", "nuts3_2013_cod", "nuts3_2002_cod", "nuts2_2013", "nuts2_2013_cod", "nuts1_2013", "nuts1_2013_cod", "pais", "pais_cod", "aces_2022", "aces_2022_cod", "ars_2022", "ars_2022_cod")
# if the file has the right column names, it's loaded, otherwise a new file is created
if (
identical(geolinkage_col, geolinkage_test)) {
geolinkage_aces <- read.csv(geolinkage_path)
} else {
# loads municipalities linkage file
linkage_municipalities <- read_csv("datasets/linkage_geo.csv", col_types = "c") |>
select(geo, cod_geo_nuts2002, cod_geo, nuts1, nuts2, nuts3, pais, cod_pais, aces2, cod_aces, ars, cod_ars) |>
rename(nuts1_2013 = "nuts1",
nuts2_2013 = "nuts2",
nuts3_2013 = "nuts3",
municipio_2013 = "geo",
municipio_2013_cod = "cod_geo",
municipio_2002_cod = "cod_geo_nuts2002",
ars_2022 = "ars",
ars_2022_cod = "cod_ars",
aces_2022 = "aces2",
aces_2022_cod = "cod_aces",
pais_cod = "cod_pais") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(municipio_2002_cod, 4),
# creates columns with the appropiate INE codes for each NUTS I, II, and III
nuts1_2002_cod = substring(municipio_2002_cod, 1, 1),
nuts1_2013_cod = substring(municipio_2013_cod, 1, 1),
nuts2_2002_cod = substring(municipio_2002_cod, 1, 2),
nuts2_2013_cod = substring(municipio_2013_cod, 1, 2),
nuts3_2002_cod = substring(municipio_2002_cod, 1, 3),
nuts3_2013_cod = substring(municipio_2013_cod, 1, 3)
)
# loads parishes linkage file
## source: https://dados.gov.pt/pt/datasets/freguesias-de-portugal/
linkage_parishes <- import("datasets/freguesias-metadata.xlsx") |>
clean_names() |>
select(distrito, freguesia, dicofre) |>
rename(distrito_2013 = "distrito",
freguesia_2013 = "freguesia",
dicofre_2013 = "dicofre") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(dicofre_2013, 1, 4),
# some INE databases have a distric disaggregation
distrito_2013_cod = case_when(
distrito_2013 == "Aveiro" ~ "01",
distrito_2013 == "Beja" ~ "02",
distrito_2013 == "Braga" ~ "03",
distrito_2013 == "Bragança" ~ "04",
distrito_2013 == "Castelo Branco" ~ "05",
distrito_2013 == "Coimbra" ~ "06",
distrito_2013 == "Évora" ~ "07",
distrito_2013 == "Faro" ~ "08",
distrito_2013 == "Guarda" ~ "09",
distrito_2013 == "Leiria" ~ "10",
distrito_2013 == "Lisboa" ~ "11",
distrito_2013 == "Portalegre" ~ "12",
distrito_2013 == "Porto" ~ "13",
distrito_2013 == "Santarém" ~ "14",
distrito_2013 == "Setúbal" ~ "15",
distrito_2013 == "Viana do Castelo" ~ "16",
distrito_2013 == "Vila Real" ~ "17",
distrito_2013 == "Viseu" ~ "18",
distrito_2013 %in% c("Ilha de Santa Maria", "Ilha de São Miguel", "Ilha Terceira", "Ilha Graciosa", "Ilha de São Jorge", "Ilha do Pico", "Ilha do Faial", "Ilha das Flores", "Ilha do Corvo") ~ "2",
distrito_2013 %in% c("Ilha da Madeira", "Ilha de Porto Santo") ~ "3"
)
)
# links parishes and municipalities and corrects the health cluster boundaries (valid as of 2022-12-31)
geolinkage_aces <- left_join(linkage_parishes, linkage_municipalities, by = "cod_mun4") |>
select(freguesia_2013, dicofre_2013, municipio_2013, municipio_2013_cod, municipio_2002_cod, distrito_2013, distrito_2013_cod, nuts3_2013, nuts3_2013_cod, nuts3_2002_cod, nuts2_2013, nuts2_2013_cod, nuts1_2013, nuts1_2013_cod, pais, pais_cod, aces_2022, aces_2022_cod, ars_2022, ars_2022_cod) |>
# cleans up the health cluster boundaries in Lisbon and Porto Metropolitan Areas
mutate(aces_2022 = case_when(
# aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Areeiro", "Arroios", "Beato", "Estrela", "Marvila", "Misericórdia", "Olivais", "Parque das Nações", "Penha de França", "Santa Maria Maior", "Santo António", "São Vicente") ~ "aces_2022 Lisboa Central",
# aces_2022 Lisboa Norte
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Alvalade", "Avenidas Novas", "Benfica", "Campolide", "Carnide", "Lumiar", "São Domingos de Benfica", "Santa Clara") ~ "aces_2022 Lisboa Norte",
# parish split between aces_2022 Lisboa Central and aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Campo de Ourique") ~ "aces_2022 Lisboa Norte / aces_2022 Lisboa Central",
# aces_2022 Lisboa Ocidental/Oeiras
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Ajuda", "Belém", "Alcântara", "Campo de Ourique") ~ "aces_2022 Lisboa Ocidental/Oeiras",
municipio_2013 == "Oeiras" ~ "aces_2022 Lisboa Ocidental/Oeiras",
# aces_2022 Porto Ocidental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Ramalde", "União das freguesias de Aldoar, Foz do Douro e Nevogilde", "União das freguesias de Cedofeita, Santo Ildefonso, Sé, Miragaia, São Nicolau e Vitória", "União das freguesias de Lordelo do Ouro e Massarelos") ~ "aces_2022 Porto Ocidental",
# aces_2022 Porto Oriental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Bonfim", "Campanhã", "Paranhos") ~ "aces_2022 Porto Oriental",
# aces_2022 Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Avintes", "Canidelo", "Oliveira do Douro", "União das freguesias de Mafamude e Vilar do Paraíso", "União das freguesias de Santa Marinha e São Pedro da Afurada", "Vilar de Andorinho") ~ "aces_2022 Gaia",
# aces_2022 Espinho/Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Arcozelo", "Canelas", "Madalena", "São Félix da Marinha", "União das freguesias de Grijó e Sermonde", "União das freguesias de Gulpilhares e Valadares", "União das freguesias de Pedroso e Seixezelo", "União das freguesias de Sandim, Olival, Lever e Crestuma", "União das freguesias de Serzedo e Perosinho") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Gondomar" & freguesia_2013 %in% c("Lomba") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Espinho" ~ "aces_2022 Espinho/Gaia",
TRUE ~ as.character(aces_2022)),
aces_2022 = str_replace_all(aces_2022,"ACeS", "ACES"))
# saves as .csv
write.csv(geolinkage_aces, file = geolinkage_path, fileEncoding = "UTF-8", row.names = FALSE)
## WARNING: Portuguese NUTS will be altered in 2023 by https://ec.europa.eu/transparency/documents-register/detail?ref=C(2022)9242&lang=pt
}
setwd("C:/Users/jdrdionisio/Desktop/RProjects/Projects/INE/INE_API")
setwd("C:/Users/jdrdionisio/Desktop/RProjects/Projects/INE/INE_API")
geolinkage_path <- "datasets/geolinkage_aces_2022.csv"
# gets the column names from the geolinkage file
geolinkage_col <- suppressWarnings(tryCatch(colnames(read.csv(geolinkage_path)), error = function(e) NULL))
# sets the column names to test against
geolinkage_test <- c("freguesia_2013", "dicofre_2013", "municipio_2013", "municipio_2013_cod", "municipio_2002_cod", "distrito_2013", "distrito_2013_cod", "nuts3_2013", "nuts3_2013_cod", "nuts3_2002_cod", "nuts2_2013", "nuts2_2013_cod", "nuts1_2013", "nuts1_2013_cod", "pais", "pais_cod", "aces_2022", "aces_2022_cod", "ars_2022", "ars_2022_cod")
# if the file has the right column names, it's loaded, otherwise a new file is created
if (
identical(geolinkage_col, geolinkage_test)) {
geolinkage_aces <- read.csv(geolinkage_path)
} else {
# loads municipalities linkage file
linkage_municipalities <- read_csv("datasets/linkage_geo.csv", col_types = "c") |>
select(geo, cod_geo_nuts2002, cod_geo, nuts1, nuts2, nuts3, pais, cod_pais, aces2, cod_aces, ars, cod_ars) |>
rename(nuts1_2013 = "nuts1",
nuts2_2013 = "nuts2",
nuts3_2013 = "nuts3",
municipio_2013 = "geo",
municipio_2013_cod = "cod_geo",
municipio_2002_cod = "cod_geo_nuts2002",
ars_2022 = "ars",
ars_2022_cod = "cod_ars",
aces_2022 = "aces2",
aces_2022_cod = "cod_aces",
pais_cod = "cod_pais") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(municipio_2002_cod, 4),
# creates columns with the appropiate INE codes for each NUTS I, II, and III
nuts1_2002_cod = substring(municipio_2002_cod, 1, 1),
nuts1_2013_cod = substring(municipio_2013_cod, 1, 1),
nuts2_2002_cod = substring(municipio_2002_cod, 1, 2),
nuts2_2013_cod = substring(municipio_2013_cod, 1, 2),
nuts3_2002_cod = substring(municipio_2002_cod, 1, 3),
nuts3_2013_cod = substring(municipio_2013_cod, 1, 3)
)
# loads parishes linkage file
## source: https://dados.gov.pt/pt/datasets/freguesias-de-portugal/
linkage_parishes <- import("datasets/freguesias-metadata.xlsx") |>
clean_names() |>
select(distrito, freguesia, dicofre) |>
rename(distrito_2013 = "distrito",
freguesia_2013 = "freguesia",
dicofre_2013 = "dicofre") |>
mutate(
# cod_mun4 is used to link the two files
cod_mun4 = substring(dicofre_2013, 1, 4),
# some INE databases have a distric disaggregation
distrito_2013_cod = case_when(
distrito_2013 == "Aveiro" ~ "01",
distrito_2013 == "Beja" ~ "02",
distrito_2013 == "Braga" ~ "03",
distrito_2013 == "Bragança" ~ "04",
distrito_2013 == "Castelo Branco" ~ "05",
distrito_2013 == "Coimbra" ~ "06",
distrito_2013 == "Évora" ~ "07",
distrito_2013 == "Faro" ~ "08",
distrito_2013 == "Guarda" ~ "09",
distrito_2013 == "Leiria" ~ "10",
distrito_2013 == "Lisboa" ~ "11",
distrito_2013 == "Portalegre" ~ "12",
distrito_2013 == "Porto" ~ "13",
distrito_2013 == "Santarém" ~ "14",
distrito_2013 == "Setúbal" ~ "15",
distrito_2013 == "Viana do Castelo" ~ "16",
distrito_2013 == "Vila Real" ~ "17",
distrito_2013 == "Viseu" ~ "18",
distrito_2013 %in% c("Ilha de Santa Maria", "Ilha de São Miguel", "Ilha Terceira", "Ilha Graciosa", "Ilha de São Jorge", "Ilha do Pico", "Ilha do Faial", "Ilha das Flores", "Ilha do Corvo") ~ "2",
distrito_2013 %in% c("Ilha da Madeira", "Ilha de Porto Santo") ~ "3"
)
)
# links parishes and municipalities and corrects the health cluster boundaries (valid as of 2022-12-31)
geolinkage_aces <- left_join(linkage_parishes, linkage_municipalities, by = "cod_mun4") |>
select(freguesia_2013, dicofre_2013, municipio_2013, municipio_2013_cod, municipio_2002_cod, distrito_2013, distrito_2013_cod, nuts3_2013, nuts3_2013_cod, nuts3_2002_cod, nuts2_2013, nuts2_2013_cod, nuts1_2013, nuts1_2013_cod, pais, pais_cod, aces_2022, aces_2022_cod, ars_2022, ars_2022_cod) |>
# cleans up the health cluster boundaries in Lisbon and Porto Metropolitan Areas
mutate(aces_2022 = case_when(
# aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Areeiro", "Arroios", "Beato", "Estrela", "Marvila", "Misericórdia", "Olivais", "Parque das Nações", "Penha de França", "Santa Maria Maior", "Santo António", "São Vicente") ~ "aces_2022 Lisboa Central",
# aces_2022 Lisboa Norte
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Alvalade", "Avenidas Novas", "Benfica", "Campolide", "Carnide", "Lumiar", "São Domingos de Benfica", "Santa Clara") ~ "aces_2022 Lisboa Norte",
# parish split between aces_2022 Lisboa Central and aces_2022 Lisboa Central
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Campo de Ourique") ~ "aces_2022 Lisboa Norte / aces_2022 Lisboa Central",
# aces_2022 Lisboa Ocidental/Oeiras
municipio_2013 == "Lisboa" & freguesia_2013 %in% c("Ajuda", "Belém", "Alcântara", "Campo de Ourique") ~ "aces_2022 Lisboa Ocidental/Oeiras",
municipio_2013 == "Oeiras" ~ "aces_2022 Lisboa Ocidental/Oeiras",
# aces_2022 Porto Ocidental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Ramalde", "União das freguesias de Aldoar, Foz do Douro e Nevogilde", "União das freguesias de Cedofeita, Santo Ildefonso, Sé, Miragaia, São Nicolau e Vitória", "União das freguesias de Lordelo do Ouro e Massarelos") ~ "aces_2022 Porto Ocidental",
# aces_2022 Porto Oriental
municipio_2013 == "Porto" & freguesia_2013 %in% c("Bonfim", "Campanhã", "Paranhos") ~ "aces_2022 Porto Oriental",
# aces_2022 Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Avintes", "Canidelo", "Oliveira do Douro", "União das freguesias de Mafamude e Vilar do Paraíso", "União das freguesias de Santa Marinha e São Pedro da Afurada", "Vilar de Andorinho") ~ "aces_2022 Gaia",
# aces_2022 Espinho/Gaia
municipio_2013 == "Vila Nova de Gaia" & freguesia_2013 %in% c("Arcozelo", "Canelas", "Madalena", "São Félix da Marinha", "União das freguesias de Grijó e Sermonde", "União das freguesias de Gulpilhares e Valadares", "União das freguesias de Pedroso e Seixezelo", "União das freguesias de Sandim, Olival, Lever e Crestuma", "União das freguesias de Serzedo e Perosinho") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Gondomar" & freguesia_2013 %in% c("Lomba") ~ "aces_2022 Espinho/Gaia",
municipio_2013 == "Espinho" ~ "aces_2022 Espinho/Gaia",
TRUE ~ as.character(aces_2022)),
aces_2022 = str_replace_all(aces_2022,"ACeS", "ACES"))
# saves as .csv
write.csv(geolinkage_aces, file = geolinkage_path, fileEncoding = "UTF-8", row.names = FALSE)
## WARNING: Portuguese NUTS will be altered in 2023 by https://ec.europa.eu/transparency/documents-register/detail?ref=C(2022)9242&lang=pt
}
View(linkage_geo)
View(geolinkage_aces)
colnames(geolinkage_aces)
setwd("C:/Users/jdrdionisio/Desktop/RProjects/Projects/INE/INE_API")
geolinkage_path <- "datasets/geolinkage_aces_2022.csv"
geolinkage_aces <- read.csv(geolinkage_path)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
results_raw <-
fromJSON("https://www.ine.pt/ine/json_indicador/pindicaMeta.jsp?varcd=0008100&Dim1=T&lang=PT")
View(results_raw)
results_raw <- fromJSON("https://www.ine.pt/ine/json_indicador/pindica.jsp?varcd=0008100&Dim1=T&lang=PT")
results_raw <- fromJSON("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=0008100&Dim1=T&lang=PT")
View(results_raw)
View(results_raw[[15]][[1]])
View(results_raw[[15]][[1]])
results <- as.data.frame(results_raw$Dados)
View(result)
View(results)
View(results[[9]][[1]])
results_raw <- fromJSON("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=0011626&Dim1=T&lang=PT")
View(results_raw)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
success <- c(2,4,6,7)
4 %in% success
groups_chosen <- c("Freguesia", "NUTS III")
s_chosen)
isFALSE(c("Freguesia","ACES") %in% groups_chosen)
c("Freguesia","ACES") %in% groups_chosen
isFALSE(c("Freguesia") %in% groups_chosen|c("ACES") %in% groups_chosen)
c("Freguesia") %in% groups_chosen|c("ACES") %in% groups_chosen
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
groups_chosen <- c("Município")
success <- c(2)
isFALSE(c("Município") %in% groups_chosen|
c("ACES") %in% groups_chosen|
c("ARS") %in% groups_chosen|
c("Distrito") %in% groups_chosen) & (2 %in% success)
isFALSE(c("Município") %in% groups_chosen|
+             c("ACES") %in% groups_chosen|
+             c("ARS") %in% groups_chosen|
+             c("Distrito") %in% groups_chosen)
isFALSE(c("Município") %in% groups_chosen|c("ACES") %in% groups_chosen|c("ARS") %in% groups_chosen|c("Distrito") %in% groups_chosen)
isFALSE(c("Município") %in% groups_chosen)
c("Município") %in% groups_chosen
isFALSE(c("Município") %in% groups_chosen)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
