geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
}
}
}
install.packages('jsonlite', dependencies=TRUE, repos='http://cran.rstudio.com/')
library(jsonlite)
install.packages("tidyverse", dependencies=TRUE, repos='http://cran.rstudio.com/')
library(tidyverse)
install.packages("readxl", dependencies=TRUE, repos='http://cran.rstudio.com/')
library(readxl)
install.packages("data.table", dependencies=TRUE)
install.packages("readxl", dependencies = TRUE, repos = "http://cran.rstudio.com/")
library("data.table")
linkage_geo <- read_csv("datasets/linkage_geo.csv")
linkage_geo <- linkage_geo %>%
select(geo, ars, nuts3, aces2, nuts1, nuts2, cod_geo_nuts2002, cod_geo)  %>%
rename(municip="geo")%>%
mutate(municip= recode(municip, "Calheta"="Calheta [R.A. Madeira]"))
#indicador <- c()
Indicadores <- read_excel("datasets/Indicadores.xlsx", skip = 14)
Indicadores <- Indicadores %>%
filter(`Disponível no Portal`== "Sim")
#indicador <- Indicadores$`Código de difusão`
indicador <- c("0003182")
desag <- "&Dim2="
cod_2002 <-linkage_geo$cod_geo_nuts2002
cod_2002 <- cod_2002[! cod_2002 %in% c("9999999", "0")]
cod_2014 <- linkage_geo$cod_geo
cod_2014 <- cod_2014[! cod_2014 %in% c("9999999", "0")]
nuts_ii_cod <- c("PT","11","16","17","18","19","20","30")
actual_year <- year(Sys.Date())
x <- 5
last_yearsv1 <- as.character(c((actual_year-x):(actual_year)))
a <- length(indicador)
b <- length(cod_2014)
c <- length(nuts_ii_cod)
d <- length(last_yearsv1)
counter <- 1
result_list <- list()
#Evitar overload do servidor do INE com requests Colocar sempre antes de um request
sleep <- function(counter){
if (counter %% 100 == 0) {
Sys.sleep(60)
}
counter <- counter+1
return(counter)
}
save_to_result_list <- function(){
#Segundo loop baseado na desagregação maxima conseguida
dados <- as.data.frame(result$Dados)
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
last_years <- as.character(c((last_year-x):(last_year)))
each_df <- dados %>%
select(last_years[i])%>%
unnest(last_years[i])
colunas_por_ano <- colnames(each_df)
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
}
write_output <- function(){
x <- length(as.data.frame(result_list))
for (i in 1:x) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
#result_list <- list()
}
for (i in 1:a) {
indicador_atual <- indicador[i]
for (i in b) {
#retirar indicador com desagregação municipio 2014
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T", desag, cod_2014[i], "&lang=PT"))
number_results_loop <- length(c(1:b))
#Chack if result exists - Se sim vai começar a fazer assign se não tenta fazer com agregação menor
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador com desagregação municipio 2002
for (i in 1:b) {
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T",desag, cod_2002[i], "&lang=PT"))
number_results_loop <- length(c(1:b))
}
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador com desagregação NUTSII
for (i in 1:c) {
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual ,"&Dim1=T",desag, nuts_ii_cod[i], "&lang=PT"))
number_results_loop <- length(c(1:c))
}
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador sem desagragação
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T&lang=PT"))
number_results_loop <- length(c(1:c))
}
}
}
#se o result tiver dados - grava para a results_list
if(length(result)>0){
dados <- as.data.frame(result$Dados)
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
last_years <- as.character(c((last_year-x):(last_year)))
each_df <- dados %>%
select(last_years[i])%>%
unnest(last_years[i])
colunas_por_ano <- colnames(each_df)
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
x <- length(as.data.frame(result_list))
for (i in 1:x) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
}
}
}
linkage_geo <- read_csv("datasets/linkage_geo.csv")
linkage_geo <- linkage_geo %>%
select(geo, ars, nuts3, aces2, nuts1, nuts2, cod_geo_nuts2002, cod_geo)  %>%
rename(municip="geo")%>%
mutate(municip= recode(municip, "Calheta"="Calheta [R.A. Madeira]"))
#indicador <- c()
Indicadores <- read_excel("datasets/Indicadores.xlsx", skip = 14)
Indicadores <- Indicadores %>%
filter(`Disponível no Portal`== "Sim")
#indicador <- Indicadores$`Código de difusão`
indicador <- c("0003182")
desag <- "&Dim2="
cod_2002 <-linkage_geo$cod_geo_nuts2002
cod_2002 <- cod_2002[! cod_2002 %in% c("9999999", "0")]
cod_2014 <- linkage_geo$cod_geo
cod_2014 <- cod_2014[! cod_2014 %in% c("9999999", "0")]
nuts_ii_cod <- c("PT","11","16","17","18","19","20","30")
actual_year <- year(Sys.Date())
x <- 5
last_yearsv1 <- as.character(c((actual_year-x):(actual_year)))
a <- length(indicador)
b <- length(cod_2014)
c <- length(nuts_ii_cod)
d <- length(last_yearsv1)
counter <- 1
result_list <- list()
#Evitar overload do servidor do INE com requests Colocar sempre antes de um request
sleep <- function(counter){
if (counter %% 100 == 0) {
Sys.sleep(60)
}
counter <- counter+1
return(counter)
}
save_to_result_list <- function(){
#Segundo loop baseado na desagregação maxima conseguida
dados <- as.data.frame(result$Dados)
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
last_years <- as.character(c((last_year-x):(last_year)))
each_df <- dados %>%
select(last_years[i])%>%
unnest(last_years[i])
colunas_por_ano <- colnames(each_df)
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
}
write_output <- function(){
x <- length(as.data.frame(result_list))
for (i in 1:x) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
#result_list <- list()
}
for (i in 1:a) {
indicador_atual <- indicador[i]
for (i in b) {
#retirar indicador com desagregação municipio 2014
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T", desag, cod_2014[i], "&lang=PT"))
number_results_loop <- length(c(1:b))
#Chack if result exists - Se sim vai começar a fazer assign se não tenta fazer com agregação menor
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador com desagregação municipio 2002
for (i in 1:b) {
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T",desag, cod_2002[i], "&lang=PT"))
number_results_loop <- length(c(1:b))
}
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador com desagregação NUTSII
for (i in 1:c) {
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual ,"&Dim1=T",desag, nuts_ii_cod[i], "&lang=PT"))
number_results_loop <- length(c(1:c))
}
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador sem desagragação
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T&lang=PT"))
number_results_loop <- length(c(1:c))
}
}
}
#se o result tiver dados - grava para a results_list
if(length(result)>0){
dados <- as.data.frame(result$Dados)
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
last_years <- as.character(c((last_year-x):(last_year)))
each_df <- dados %>%
select(last_years[i])%>%
unnest(last_years[i])
colunas_por_ano <- colnames(each_df)
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
x <- length(as.data.frame(result_list))
for (i in 1:x) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
}
}
}
View(dados)
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
last_years <- as.character(c((last_year-x):(last_year)))
each_df <- dados %>%
select(last_years[i])%>%
unnest(last_years[i])
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
linkage_geo <- read_csv("datasets/linkage_geo.csv")
linkage_geo <- linkage_geo %>%
select(geo, ars, nuts3, aces2, nuts1, nuts2, cod_geo_nuts2002, cod_geo)  %>%
rename(municip="geo")%>%
mutate(municip= recode(municip, "Calheta"="Calheta [R.A. Madeira]"))
#indicador <- c()
Indicadores <- read_excel("datasets/Indicadores.xlsx", skip = 14)
Indicadores <- Indicadores %>%
filter(`Disponível no Portal`== "Sim")
#indicador <- Indicadores$`Código de difusão`
indicador <- c("0003182")
desag <- "&Dim2="
cod_2002 <-linkage_geo$cod_geo_nuts2002
cod_2002 <- cod_2002[! cod_2002 %in% c("9999999", "0")]
cod_2014 <- linkage_geo$cod_geo
cod_2014 <- cod_2014[! cod_2014 %in% c("9999999", "0")]
nuts_ii_cod <- c("PT","11","16","17","18","19","20","30")
actual_year <- year(Sys.Date())
x <- 5
last_yearsv1 <- as.character(c((actual_year-x):(actual_year)))
a <- length(indicador)
b <- length(cod_2014)
c <- length(nuts_ii_cod)
d <- length(last_yearsv1)
counter <- 1
result_list <- list()
#Evitar overload do servidor do INE com requests Colocar sempre antes de um request
sleep <- function(counter){
if (counter %% 100 == 0) {
Sys.sleep(60)
}
counter <- counter+1
return(counter)
}
save_to_result_list <- function(){
#Segundo loop baseado na desagregação maxima conseguida
dados <- as.data.frame(result$Dados)
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
last_years <- as.character(c((last_year-x):(last_year)))
each_df <- dados %>%
select(last_years[1])%>%
unnest(last_years[1])
colunas_por_ano <- colnames(each_df)
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
}
write_output <- function(){
x <- length(as.data.frame(result_list))
for (i in 1:x) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
#result_list <- list()
}
for (i in 1:a) {
indicador_atual <- indicador[i]
for (i in b) {
#retirar indicador com desagregação municipio 2014
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T", desag, cod_2014[i], "&lang=PT"))
number_results_loop <- length(c(1:b))
#Chack if result exists - Se sim vai começar a fazer assign se não tenta fazer com agregação menor
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador com desagregação municipio 2002
for (i in 1:b) {
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T",desag, cod_2002[i], "&lang=PT"))
number_results_loop <- length(c(1:b))
}
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador com desagregação NUTSII
for (i in 1:c) {
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual ,"&Dim1=T",desag, nuts_ii_cod[i], "&lang=PT"))
number_results_loop <- length(c(1:c))
}
if (!("IndicadorCod" %in% colnames(result))) {
#retirar indicador sem desagragação
counter <- sleep(counter)
result <- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",indicador_atual,"&Dim1=T&lang=PT"))
number_results_loop <- length(c(1:c))
}
}
}
#se o result tiver dados - grava para a results_list
if(length(result)>0){
dados <- as.data.frame(result$Dados)
colunas_nanos <- colnames(result$Dados)
num_colunas <- length(colunas_nanos)
last_year <- as.numeric(colunas_nanos[num_colunas])
if(d > num_colunas){
x <- num_colunas
}
last_years <- as.character(c((last_year-x):(last_year)))
each_df <- dados %>%
select(last_years[i])%>%
unnest(last_years[i])
colunas_por_ano <- colnames(each_df)
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
g <- length(as.data.frame(result_list))
for (i in 1:g) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
}
}
}
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
colunas_por_ano <- colnames(each_df)
each_df <- dados %>%
select(last_years[i])%>%
unnest(last_years[i])
colunas_por_ano <- colnames(each_df)
for (i in 1:x) {
#ver e retirar os nomes das colunas de cada ano para o select
dados1 <- dados %>%
unnest(last_years[i])%>%
select(all_of(colunas_por_ano))
result_list[[last_years[i]]] <- rbind(result_list[[last_years[i]]], dados1)
}
g <- length(as.data.frame(result_list))
for (i in 1:g) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
assign(full_df result_list[[last_years[i]]])%>%
for (i in 1:g) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
for (i in 1:g) {
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
}
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
assign(full_df, result_list[[last_years[i]]])%>%
mutate(municip = case_when(
geocod=="3003101" ~ "Calheta [R.A. Madeira]",
geocod=="2004501" ~ "Calheta [R.A. Açores]",
geocod=="2004201" ~ "Lagoa [R.A. Açores]",
TRUE ~ as.character(geodsg)))%>%
fwrite(file = paste0("outputs/",nomedf,".csv"), bom = T)
assign(full_df, result_list[[last_years[i]]])
nomedf <- paste0(indicador_atual,"_",last_years[i])
assign(full_df, result_list[[last_years[i]]])
nomedf <- paste0(indicador_atual,"_",last_years[i])
nomedf <- paste0(indicador_atual,"_",last_years[i])
memory.limit()
