indicator_nodes <- getNodeSet(xml_file, "//indicator")
# Set the path to save the downloaded file
file_path <- "INE_API/datasets/final_ine.xml"
# Read the downloaded XML file
xml_file <- read_xml(file_path)
library(xml2)
# Read the downloaded XML file
xml_file <- read_xml(file_path)
library(XML)
# Extract indicator nodes
indicator_nodes <- getNodeSet(xml_file, "//indicator")
library(data.table)
# Extract indicator nodes
indicator_nodes <- getNodeSet(xml_file, "//indicator")
# Extract indicator nodes
indicator_nodes <- getNodeSet(xml_file, "/indicator")
library(XML)
# Extract indicator nodes
indicator_nodes <- getNodeSet(xml_file, "//indicator")
library(xml2)
# Read the XML data
# Helper function to extract node value or return NA if the node doesn't exist
get_node_value <- function(node, xpath) {
target_node <- xml_find_first(node, xpath)
if (!is.null(target_node)) {
return(xml_text(target_node))
} else {
return(NA)
}
}
# Extract indicator nodes
indicator_nodes <- xml_find_all(xml_file, "//indicator")
# Extract indicator information
indicators <- lapply(indicator_nodes, function(node) {
data <- data.frame(
theme = get_node_value(node, "./theme[1]"),
subtheme = get_node_value(node, "./subtheme[1]"),
keywords = get_node_value(node, "./keywords"),
title = get_node_value(node, "./title"),
varcd = get_node_value(node, "./varcd"),
description = get_node_value(node, "./description"),
geo_lastlevel = get_node_value(node, "./geo_lastlevel"),
first_period_available = get_node_value(node, "./dates/first_period_available"),
last_period_available = get_node_value(node, "./dates/last_period_available"),
last_update = get_node_value(node, "./dates/last_update"),
periodicity = get_node_value(node, "./periodicity"),
update_type = get_node_value(node, "./update_type"),
bdd_url = get_node_value(node, "./html/bdd_url"),
metainfo_url = get_node_value(node, "./html/metainfo_url"),
json_dataset = get_node_value(node, "./json/json_dataset"),
json_metainfo = get_node_value(node, "./json/json_metainfo")
)
return(data)
})
# Combine indicator information into a single data frame
df <- do.call(rbind, indicators)
# Print the data frame
print(df)
library(data.table)
fwrite(
df,
file = "INE_API/datasets/final_ine.csv"
)
fwrite(
df,
file = "INE_API/datasets/final_ine.csv",
sep = ";"
, bom = TRUE
)
library(data.table)
fwrite(
df,
file = "INE_API/datasets/final_ine.csv",
sep = ";"
, bom = TRUE
)
fwrite(
df,
file = "INE_API/datasets/final_ine.csv",
sep = ";"
, bom = TRUE
)
shiny::runApp('INE_API')
runApp('INE_API')
shiny::runApp('INE_API')
paste0(
"https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",
"0011626",
# "&Dim1=T",
# "&Dim2=",
# "PT",
"&lang=PT"
)
paste0(
"https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=",
"0011626",
# "&Dim1=T",
# "&Dim2=",
# "PT",
"&lang=PT"
)
#| code-fold: true
#| code-summary: "Mostrar Código"
codigos_df <- import("datasets/geo_linkage_2024.csv")
#| code-fold: true
#| code-summary: "Mostrar Código"
library(rio)
codigos_df <- import("datasets/geo_linkage_2024.csv")
View(codigos_df)
#
#
numbers <- codigos_df$dicofre_2013
df3 <- data.frame()
l <- length(numbers)
df3 <- data.frame()
if(!"valor" %in% colnames(df3 )){
df3 <- data.frame(geocod=0, geodsg=0, valor=0,obs=0, year=0)
}
View(df3)
l <- length(numbers)
for(i in 1:l ){
result<- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=0011626&Dim1=T&Dim2=",numbers[i],"&lang=PT"))
pop <- as.data.frame(result$Dados$'2021')
if (i %% 99 == 0) {
Sys.sleep(5)
}
if(i==1){
d2 <- pop
}else{
d2 <- rbind(d2,pop)
}
}
View(d2)
l <- length(numbers)
for(i in 1:l ){
result<- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=0011626&Dim1=T&Dim2=",numbers[i],"&lang=PT"))
pop <- as.data.frame(result$Dados$'2021')
if (i %% 99 == 0) {
Sys.sleep(2)
}
if(i==1){
d2 <- pop
}else{
d2 <- rbind(d2,pop)
}
}
for(i in 1:l ){
result<- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=0011626&Dim1=T&Dim2=",numbers[i],"&lang=PT"))
pop <- as.data.frame(result$Dados$'2021')
if (i %% 99 == 0) {
Sys.sleep(2)
}
if(i==1){
d2 <- pop
}else{
d2 <- rbind(d2,pop)
}
}
View(d2)
d2_1 <- d2 |>
distinct()
View(d2_1)
numbers_done <- distict(d2$geocod)
numbers_done <- unique(d2$geocod)
#
#
numbers <- as.character(codigos_df$dicofre_2013)
numbers
codigos_df <- import("datasets/geo_linkage_2024.csv", colClasses=c("character"))
#
#
numbers <- as.character(codigos_df$dicofre_2013)
numbers <- as.character(codigos_df$dicofre_2013)
numbers_done <- unique(d2$geocod)
teste <- setdiff(numbers, numbers_done)
codigos_df <- import("datasets/geo_linkage_2024.csv", colClasses=c("character"))
#
#
numbers <- as.character(codigos_df$dicofre_2013)
numbers_done <- unique(d2$geocod)
teste <- setdiff(numbers, numbers_done)
codigos_df <- import("datasets/geo_linkage_2024_v2.csv", colClasses=c("character"))
numbers <- as.character(codigos_df$dicofre_2013)
numbers_done <- unique(d2$geocod)
teste <- setdiff(numbers, numbers_done)
l <- length(numbers)
for(i in 1:l ){
result<- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=0011626&Dim1=T&Dim2=",numbers[i],"&lang=PT"))
pop <- as.data.frame(result$Dados$'2021')
if (i %% 99 == 0) {
Sys.sleep(2)
}
if(i==1){
d2 <- pop
}else{
d2 <- rbind(d2,pop)
}
}
d2_1 <- d2 |>
distinct()
numbers <- as.character(codigos_df$dicofre_2013)
numbers_done <- unique(d2$geocod)
teste <- setdiff(numbers, numbers_done)
numbers <- teste
l <- length(numbers)
for(i in 1:l ){
result<- fromJSON(paste0("https://www.ine.pt/ine/json_indicador/pindica.jsp?op=2&varcd=0011626&Dim1=T&Dim2=",numbers[i],"&lang=PT"))
pop <- as.data.frame(result$Dados$'2021')
if (i %% 99 == 0) {
Sys.sleep(2)
}
if(i==1){
d2 <- pop
}else{
d2 <- rbind(d2,pop)
}
print(l)
}
d2_2 <- d2 |>
distinct()
d3 <- rbind(d2_1,d2_2)
numbers <- as.character(codigos_df$dicofre_2013)
numbers_done <- unique(d3$geocod)
teste <- setdiff(numbers, numbers_done)
numbers <- teste
fwrite(d3,file = paste0("datasets/pop_2021_freg.csv"), bom = T)
colnames(codigos_df)
codigosdf2 <- codigos_df |>
select(-freguesia_2013,-uls_2023)
codigosdf2 <- codigos_df |>
select(freguesia_2013,uls_2023)
dataset <- full_join(
d3,codigosdf2
)
library(tidyverse)
dataset <- full_join(
d3,codigosdf2, by= join_by(freguesia_2013=="geodsg")
)
dataset <- full_join(
d3,codigosdf2, by= join_by("geodsg"==freguesia_2013)
)
dataset <- full_join(
d3,codigosdf2, by= join_by("geodsg"==freguesia_2013), multiple="all"
)
head(dataset)
colnames(dataset)
dataset <- dataset |>
summarise(
valor=sum(valor),
by= c(uls_2023,dim_4,dim_3_t)
)
dataset <- dataset |>
summarise(
valor=sum(as.numeric(valor)),
by= c(uls_2023,dim_4,dim_3_t)
)
View(dataset)
dataset <- full_join(
d3,codigosdf2, by= join_by("geodsg"==freguesia_2013), multiple="all"
)
dataset$dim_4 <- as.numeric(dataset$dim_4)
dataset$valor <- as.numeric(dataset$valor)
teste <- dataset |>
filter(is.na(dim_4))
View(teste)
View(teste)
dataset <- dataset |>
filter(!is.na(dim_4)) |>
summarise(
valor=sum(as.numeric(valor)),
.by= c(uls_2023,dim_4,dim_3_t)
)
View(dataset)
dataset <- dataset |>
mutate(etario = case_when(
dim_4 %in% gr_1 ~ "<1 ano"
,dim_4 %in% gr_2 ~ "0 - 4 anos"
,dim_4 %in% gr_3 ~ "5 - 9 anos"
,dim_4 %in% gr_4 ~ "10 - 14 anos"
,dim_4 %in% gr_5 ~ "15 - 19 anos"
,dim_4 %in% gr_6 ~ "20 - 24 anos"
,dim_4 %in% gr_7 ~ "25 - 29 anos"
,dim_4 %in% gr_8 ~ "30 - 34 anos"
,dim_4 %in% gr_9 ~ "35 - 39 anos"
,dim_4 %in% gr_10 ~ "40 - 44 anos"
,dim_4 %in% gr_11 ~ "45 - 49 anos"
,dim_4 %in% gr_12 ~ "50 - 54 anos"
,dim_4 %in% gr_13 ~ "55 - 59 anos"
,dim_4 %in% gr_14 ~ "60 - 64 anos"
,dim_4 %in% gr_15 ~ "65 - 69 anos"
,dim_4 %in% gr_16 ~ "70 - 74 anos"
,dim_4 %in% gr_17 ~ "75 - 80 anos"
,dim_4 %in% gr_18 ~ "81 - 84 anos"
,dim_4 %in% gr_19 ~ "85 e mais anos"
# ,dim_4 %in% gr_20 ~ "Total"
))
gr_1  <- c(1)        #<1 ano
gr_2  <- c(2:5)    #0 - 4 anos
gr_3  <- c(6:10)   #5 - 9 anos
gr_4  <- c(11:15)  #10 - 14 anos
gr_5  <- c(16:20)  #15 - 19 anos
gr_6  <- c(21:25)  #20 - 24 anos
gr_7  <- c(26:30)  #25 - 29 anos
gr_8  <- c(31:35)  #30 - 34 anos
gr_9  <- c(36:40)  #35 - 39 anos
gr_10 <- c(41:45)  #40 - 44 anos
gr_11 <- c(46:50) #45 - 49 anos
gr_12 <- c(51:55)  #50 - 55 anos
gr_13 <- c(56:60)  #56 - 59 anos
gr_14 <- c(61:65)  #60 - 65 anos
gr_15 <- c(66:70)  #65 - 69 anos
gr_16 <- c(71:75)  #70 - 74 anos
gr_17 <- c(76:80)  #75 - 80 anos
gr_18 <- c(81:85)  #81 - 85 anos
gr_19 <- c(86:101)
dataset1 <- dataset |>
mutate(etario = case_when(
dim_4 %in% gr_1 ~ "<1 ano"
,dim_4 %in% gr_2 ~ "0 - 4 anos"
,dim_4 %in% gr_3 ~ "5 - 9 anos"
,dim_4 %in% gr_4 ~ "10 - 14 anos"
,dim_4 %in% gr_5 ~ "15 - 19 anos"
,dim_4 %in% gr_6 ~ "20 - 24 anos"
,dim_4 %in% gr_7 ~ "25 - 29 anos"
,dim_4 %in% gr_8 ~ "30 - 34 anos"
,dim_4 %in% gr_9 ~ "35 - 39 anos"
,dim_4 %in% gr_10 ~ "40 - 44 anos"
,dim_4 %in% gr_11 ~ "45 - 49 anos"
,dim_4 %in% gr_12 ~ "50 - 54 anos"
,dim_4 %in% gr_13 ~ "55 - 59 anos"
,dim_4 %in% gr_14 ~ "60 - 64 anos"
,dim_4 %in% gr_15 ~ "65 - 69 anos"
,dim_4 %in% gr_16 ~ "70 - 74 anos"
,dim_4 %in% gr_17 ~ "75 - 80 anos"
,dim_4 %in% gr_18 ~ "81 - 84 anos"
,dim_4 %in% gr_19 ~ "85 e mais anos"
# ,dim_4 %in% gr_20 ~ "Total"
))
head(dataset1)
dataset1 <- dataset1 |>
summarise(
valor=sum(valor),
.by= c(uls_2023,etario,dim_3_t)
)
View(dataset1)
dataset1 <- dataset1 |>
arrange(uls_2023, etario)
View(dataset)
dataset1 <- dataset1 |>
arrange(uls_2023)
dataset1 <- dataset1 |>
arrange(uls_2023) |>
filter(dim_3_t!="HM")
dataset1 <- dataset |>
mutate(etario = case_when(
dim_4 %in% gr_1 ~ "<1 ano"
,dim_4 %in% gr_2 ~ "1 - 4 anos"
,dim_4 %in% gr_3 ~ "5 - 9 anos"
,dim_4 %in% gr_4 ~ "10 - 14 anos"
,dim_4 %in% gr_5 ~ "15 - 19 anos"
,dim_4 %in% gr_6 ~ "20 - 24 anos"
,dim_4 %in% gr_7 ~ "25 - 29 anos"
,dim_4 %in% gr_8 ~ "30 - 34 anos"
,dim_4 %in% gr_9 ~ "35 - 39 anos"
,dim_4 %in% gr_10 ~ "40 - 44 anos"
,dim_4 %in% gr_11 ~ "45 - 49 anos"
,dim_4 %in% gr_12 ~ "50 - 54 anos"
,dim_4 %in% gr_13 ~ "55 - 59 anos"
,dim_4 %in% gr_14 ~ "60 - 64 anos"
,dim_4 %in% gr_15 ~ "65 - 69 anos"
,dim_4 %in% gr_16 ~ "70 - 74 anos"
,dim_4 %in% gr_17 ~ "75 - 80 anos"
,dim_4 %in% gr_18 ~ "81 - 84 anos"
,dim_4 %in% gr_19 ~ "85 e mais anos"
# ,dim_4 %in% gr_20 ~ "Total"
))
dataset1 <- dataset1 |>
summarise(
valor=sum(valor),
.by= c(uls_2023,etario,dim_3_t)
)
dataset1 <- dataset1 |>
arrange(uls_2023) |>
filter(dim_3_t!="HM")
colnames(dataset1)
dataset2 <- dataset1 |>
pivot_wider(
id_cols = c(uls_2023,dim_3_t),
names_from = etario,
values_from = valor
)
View(dataset2)
View(dataset1)
View(dataset)
dataset <- full_join(
d3,codigosdf2, by= join_by("geodsg"==freguesia_2013), multiple="all"
)
dataset$dim_4 <- as.numeric(dataset$dim_4)
dataset$valor <- as.numeric(dataset$valor)
teste <- dataset |>
filter(is.na(uls_2023))
View(teste)
colnames(codigos_df)
codigosdf2 <- codigos_df |>
select(dicofre_2013,uls_2023)
dataset <- full_join(
d3,codigosdf2, by= join_by("geocod"==dicofre_2013), multiple="all"
)
dataset$dim_4 <- as.numeric(dataset$dim_4)
dataset$valor <- as.numeric(dataset$valor)
teste <- dataset |>
filter(is.na(uls_2023))
View(teste)
dataset <- dataset |>
filter(!is.na(dim_4)) |>
summarise(
valor=sum(as.numeric(valor)),
.by= c(uls_2023,dim_4,dim_3_t)
)
dataset1 <- dataset |>
mutate(etario = case_when(
dim_4 %in% gr_1 ~ "<1 ano"
,dim_4 %in% gr_2 ~ "1 - 4 anos"
,dim_4 %in% gr_3 ~ "5 - 9 anos"
,dim_4 %in% gr_4 ~ "10 - 14 anos"
,dim_4 %in% gr_5 ~ "15 - 19 anos"
,dim_4 %in% gr_6 ~ "20 - 24 anos"
,dim_4 %in% gr_7 ~ "25 - 29 anos"
,dim_4 %in% gr_8 ~ "30 - 34 anos"
,dim_4 %in% gr_9 ~ "35 - 39 anos"
,dim_4 %in% gr_10 ~ "40 - 44 anos"
,dim_4 %in% gr_11 ~ "45 - 49 anos"
,dim_4 %in% gr_12 ~ "50 - 54 anos"
,dim_4 %in% gr_13 ~ "55 - 59 anos"
,dim_4 %in% gr_14 ~ "60 - 64 anos"
,dim_4 %in% gr_15 ~ "65 - 69 anos"
,dim_4 %in% gr_16 ~ "70 - 74 anos"
,dim_4 %in% gr_17 ~ "75 - 80 anos"
,dim_4 %in% gr_18 ~ "81 - 84 anos"
,dim_4 %in% gr_19 ~ "85 e mais anos"
# ,dim_4 %in% gr_20 ~ "Total"
))
dataset1 <- dataset1 |>
summarise(
valor=sum(valor),
.by= c(uls_2023,etario,dim_3_t)
)
dataset1 <- dataset1 |>
arrange(uls_2023) |>
filter(dim_3_t!="HM")
dataset2 <- dataset1 |>
pivot_wider(
id_cols = c(uls_2023,dim_3_t),
names_from = etario,
values_from = valor
)
View(dataset2)
export(dataset2, "pop_uls_freg.csv", bom=T)
codigos_df <- import("datasets/geo_linkage_2024_v2_1.csv", colClasses=c("character"))
codigosdf2 <- codigos_df |>
select(dicofre_2013,uls_2023)
dataset <- full_join(
d3,codigosdf2, by= join_by("geocod"==dicofre_2013), multiple="all"
)
dataset$dim_4 <- as.numeric(dataset$dim_4)
dataset$valor <- as.numeric(dataset$valor)
teste <- dataset |>
filter(is.na(uls_2023))
dataset <- dataset |>
filter(!is.na(dim_4)) |>
summarise(
valor=sum(as.numeric(valor)),
.by= c(uls_2023,dim_4,dim_3_t)
)
dataset1 <- dataset |>
mutate(etario = case_when(
dim_4 %in% gr_1 ~ "<1 ano"
,dim_4 %in% gr_2 ~ "1 - 4 anos"
,dim_4 %in% gr_3 ~ "5 - 9 anos"
,dim_4 %in% gr_4 ~ "10 - 14 anos"
,dim_4 %in% gr_5 ~ "15 - 19 anos"
,dim_4 %in% gr_6 ~ "20 - 24 anos"
,dim_4 %in% gr_7 ~ "25 - 29 anos"
,dim_4 %in% gr_8 ~ "30 - 34 anos"
,dim_4 %in% gr_9 ~ "35 - 39 anos"
,dim_4 %in% gr_10 ~ "40 - 44 anos"
,dim_4 %in% gr_11 ~ "45 - 49 anos"
,dim_4 %in% gr_12 ~ "50 - 54 anos"
,dim_4 %in% gr_13 ~ "55 - 59 anos"
,dim_4 %in% gr_14 ~ "60 - 64 anos"
,dim_4 %in% gr_15 ~ "65 - 69 anos"
,dim_4 %in% gr_16 ~ "70 - 74 anos"
,dim_4 %in% gr_17 ~ "75 - 80 anos"
,dim_4 %in% gr_18 ~ "81 - 84 anos"
,dim_4 %in% gr_19 ~ "85 e mais anos"
# ,dim_4 %in% gr_20 ~ "Total"
))
dataset1 <- dataset1 |>
summarise(
valor=sum(valor),
.by= c(uls_2023,etario,dim_3_t)
)
dataset1 <- dataset1 |>
arrange(uls_2023) |>
filter(dim_3_t!="HM")
dataset2 <- dataset1 |>
pivot_wider(
id_cols = c(uls_2023,dim_3_t),
names_from = etario,
values_from = valor
)
export(dataset2, "pop_uls_freg_2.csv", bom=T)
